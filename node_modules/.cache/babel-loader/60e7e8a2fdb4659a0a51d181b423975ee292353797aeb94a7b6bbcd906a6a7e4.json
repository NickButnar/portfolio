{"ast":null,"code":"var _jsxFileName = \"/Users/nick_butnar/workspace/study/portfolio/src/components/Form/Form.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styles from \"./form.module.css\";\nimport btn from \"../../stylesheets/btn.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    formState\n  } = useForm();\n  const onSubmit = data => {\n    alert(JSON.stringify(data));\n    console.log(data);\n    console.log(errors, formState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pb-5\",\n        children: \"React hook form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${styles.input} ${errors.firstName ? styles.inputError : \"\"}`,\n            placeholder: \"Name\",\n            ...register(\"firstName\", {\n              required: \"Cant't be blank\",\n              maxLength: {\n                value: 20,\n                message: \"Name should be no more than 20 characters\"\n              },\n              pattern: {\n                value: /^[A-Za-z А-Яа-я]+$/i,\n                message: \"Name can only contain letters\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: errors.firstName.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${styles.input} ${errors.surname ? styles.inputError : \"\"}`,\n            placeholder: \"Surname\",\n            ...register(\"surname\", {\n              required: \"Cant`t be blank\",\n              maxLength: 20,\n              pattern: {\n                value: /^[A-Za-z А-Яа-я]+$/i,\n                message: \"Name can only contain letters\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), errors.surname && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: errors.surname.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${styles.input} ${errors.phone ? styles.inputError : \"\"}`,\n            placeholder: \"Phone\",\n            ...register(\"phone\", {\n              required: \"Can't be blank\",\n              maxLength: {\n                value: 18,\n                message: \"Number should be no more than 18 characters\"\n              },\n              pattern: {\n                value: /^[0-9+]+$/,\n                message: \"Only digits and '+' are allowed\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: errors.phone.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${styles.input} ${errors.email ? styles.inputError : \"\"}`,\n            placeholder: \"Email\",\n            ...register(\"email\", {\n              required: \"Can`t be blank\",\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message: \"Invalid email\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        className: styles.input,\n        placeholder: \"How did you hear about me?\",\n        rows: \"2\",\n        ...register(\"howDidYouFindMe\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        className: styles.input,\n        placeholder: \"How i can assist you?\",\n        rows: \"5\",\n        ...register(\"howICanAssistYou\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\",\n        className: btn.secondary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"p8vR0PybDEZfjxJzuQ+4cw1NE2s=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useForm","styles","btn","jsxDEV","_jsxDEV","Form","_s","register","handleSubmit","formState","errors","onSubmit","data","alert","JSON","stringify","console","log","className","wrapper","children","form","fileName","_jsxFileName","lineNumber","columnNumber","section","label","input","firstName","inputError","placeholder","required","maxLength","value","message","pattern","error","surname","phone","email","type","rows","secondary","_c","$RefreshReg$"],"sources":["/Users/nick_butnar/workspace/study/portfolio/src/components/Form/Form.js"],"sourcesContent":["import React from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport styles from \"./form.module.css\";\nimport btn from \"../../stylesheets/btn.module.css\";\n\nconst Form = () => {\n  const {register, handleSubmit, formState: { errors }, formState} = useForm()\n  const onSubmit = (data) => {\n    alert(JSON.stringify(data));\n    console.log(data);\n    console.log(errors, formState);\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n        <h2 className=\"pb-5\">React hook form</h2>\n\n        <div className={styles.section}>\n          <label className={styles.label}>\n            <input\n              className={`${styles.input} ${errors.firstName ? styles.inputError : \"\"}`} placeholder=\"Name\"\n              {...register(\"firstName\", {\n                required: \"Cant't be blank\",\n                maxLength: {\n                  value: 20,\n                  message: \"Name should be no more than 20 characters\",\n                },\n                pattern: {\n                  value: /^[A-Za-z А-Яа-я]+$/i,\n                  message: \"Name can only contain letters\",\n                },\n              })}\n            />\n            {errors.firstName && (\n              <p className={styles.error}>\n                {errors.firstName.message}\n              </p>\n            )}\n          </label>\n\n          <label className={styles.label}>\n            <input className={`${styles.input} ${errors.surname ? styles.inputError : \"\"}`} placeholder=\"Surname\" {...register(\"surname\", {required: \"Cant`t be blank\", maxLength: 20, pattern: {\n              value: /^[A-Za-z А-Яа-я]+$/i ,\n              message: \"Name can only contain letters\"\n            },\n\n          })} />\n            {errors.surname && <p className={styles.error}>{errors.surname.message}</p>}\n          </label>\n        </div>\n\n        <div className={styles.section}>\n          <label className={styles.label}>\n            <input\n              className={`${styles.input} ${errors.phone ? styles.inputError : \"\"}`} placeholder=\"Phone\"\n              {...register(\"phone\", {\n                required: \"Can't be blank\",\n                maxLength: {\n                  value: 18,\n                  message: \"Number should be no more than 18 characters\"\n                },\n                pattern: {\n                  value: /^[0-9+]+$/,\n                  message: \"Only digits and '+' are allowed\"\n                }\n              })}\n            />\n            {errors.phone && <p className={styles.error}>{errors.phone.message}</p>}\n          </label>\n\n          <label className={styles.label}>\n            <input className={`${styles.input} ${errors.email ? styles.inputError : \"\"}`} placeholder=\"Email\"\n            {...register(\"email\", {\n              required: \"Can`t be blank\",\n              pattern: {\n                value:  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message: \"Invalid email\"\n              }\n            })}/>\n            {errors.email && <p className={styles.error}>{errors.email.message}</p>}\n          </label>\n        </div>\n\n        <textarea type=\"text\" className={styles.input} placeholder=\"How did you hear about me?\" rows=\"2\" {...register(\"howDidYouFindMe\")}/>\n\n        <textarea type=\"text\" className={styles.input} placeholder=\"How i can assist you?\" rows=\"5\" {...register(\"howICanAssistYou\")}/>\n\n        <input type=\"submit\" value=\"Send\" className={btn.secondary}/>\n      </form>\n    </div>\n  )\n}\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}